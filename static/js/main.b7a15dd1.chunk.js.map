{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","shared/components/FormInput/FormInput.module.css","redux/actions.js","shared/components/FormInput/FormInput.jsx","components/ContactFrom/fields.js","components/ContactFrom/ContactFrom.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","pages/PhonebookPage/PhoneBookPage.jsx","App.js","redux/reducer.js","redux/store.js","index.js","components/ContactFrom/ContactFrom.module.css"],"names":["module","exports","filterContacts","createAction","deleteContact","addContact","name","number","payload","id","v4","FormInput","classname","props","className","styles","searchField","defaultProps","required","placeholder","type","value","onChange","fields","ContactFrom","state","handleChange","e","target","setState","handleSubmit","preventDefault","contacts","find","item","onSubmit","reset","alert","nameFieldId","numberFieldId","this","form","formInput","htmlFor","formField","Component","connect","phonebook","dispatch","actions","Filter","filter","filterFieldId","inputField","input","ContactListItem","onClick","contactListItem","btn","normalizedFilter","toLowerCase","contact","includes","contactElements","map","PhonebookPage","App","PhoneBookPage","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b7a15dd1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"Filter_inputField__2xgV2\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactListItem_contactListItem__2urGF\",\"btn\":\"ContactListItem_btn__2d1l9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchField\":\"FormInput_searchField__1vQV9\"};","import { createAction } from '@reduxjs/toolkit'\nimport { v4 } from 'uuid'\n\nconst filterContacts = createAction('contacts/add');\nconst deleteContact = createAction('contacts/delete');\nconst addContact = createAction('contacts/filter', (name, number) => ({\n    payload: {\n        id: v4(),\n        name,\n        number,\n    }\n}))\n\n\nexport default { addContact, deleteContact, filterContacts };","import React from 'react'\nimport PropTypes from 'prop-types';\nimport typeOptions from './typeOptions'\n\nimport styles from './FormInput.module.css'\n\nconst FormInput = ({ classname, ...props }) => {\n    return (<>\n        <input className={`${styles.searchField} ${classname}`} {...props} />\n    </>);\n}\n\nFormInput.defaultProps = {\n    required: false,\n    placeholder: '',\n    name: '',\n    className: '',\n    type: 'text',\n    value: '',\n    onChange: () => { }\n}\n\nFormInput.propTypes = {\n    placeholder: PropTypes.string,\n    name: PropTypes.string,\n    className: PropTypes.string,\n    type: PropTypes.oneOf(typeOptions),\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n}\n\nexport default FormInput;","export const fields = {\n    name: {\n        type: 'text',\n        value: '',\n        name: 'name',\n        required: true,\n    },\n    number: {\n        type: 'text',\n        value: '',\n        name: 'number',\n        required: true,\n    }\n}","import { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { v4 } from 'uuid'\nimport actions from '../../redux/actions'\nimport FormInput from '../../shared/components/FormInput'\nimport { fields } from './fields'\n\nimport styles from './ContactFrom.module.css'\n\nclass ContactFrom extends Component {\n\n    state = {\n        name: \"\",\n        number: \"\",\n    }\n\n    handleChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { name, number } = this.state;\n        const contact = this.props.contacts.find(item => item.name === name || item.number === number)\n        if (!contact) {\n            this.props.onSubmit(name, number)\n            this.reset()\n            return\n        }\n        alert(`${name} is already in contacts`)\n        this.reset()\n\n    }\n\n    reset = () => {\n        this.setState({\n            name: '',\n            number: '',\n        })\n    }\n\n    render() {\n        const nameFieldId = v4();\n        const numberFieldId = v4();\n        const { name, number } = this.state;\n        const { handleChange, handleSubmit } = this;\n        return (\n            <>\n                <form className={styles.form} onSubmit={handleSubmit}>\n                    <div className={styles.formInput}>\n                        <label htmlFor={nameFieldId}>Name</label>\n                        <FormInput onChange={handleChange} {...fields.name} value={name} className={styles.formField} />\n                        <label htmlFor={numberFieldId}>Number</label>\n                        <FormInput onChange={handleChange} {...fields.number} value={number} className={styles.formField} />\n                    </div>\n                    <button type=\"submit\">Add contact</button>\n                </form>\n            </>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    contacts: state.phonebook.contacts,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmit: (name, number) => dispatch(actions.addContact(name, number)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFrom);","import React from 'react';\nimport { v4 } from 'uuid';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport actions from '../../redux/actions'\n\nimport styles from './Filter.module.css'\n\nconst Filter = ({ filter, onChange }) => {\n\n    const filterFieldId = v4();\n    return (\n        <div className={styles.inputField}>\n            <label htmlFor={filterFieldId}>Find contacts by name</label>\n            <input\n                className={styles.input}\n                id={filterFieldId}\n                type=\"text\"\n                value={filter}\n                onChange={onChange}\n            />\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    filter: state.phonebook.filter,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    onChange: (e) => dispatch(actions.filterContacts(e.target.value))\n})\n\nFilter.defaultProps = {\n    filter: '',\n    onChange: () => { }\n}\n\nFilter.propTypes = {\n    filter: PropTypes.string,\n    onChange: PropTypes.func,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport styles from './ContactListItem.module.css'\n\nconst ContactListItem = ({ name, number, onClick }) => {\n    return (\n        <li className={styles.contactListItem}>\n            <p>{name}: {number}</p>\n            <button className={styles.btn} type=\"button\" onClick={onClick}>Delete</button>\n        </li>\n    );\n}\n\n\nContactListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n}\n\nexport default ContactListItem;","import React from 'react';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport ContactListItem from '../ContactListItem'\nimport actions from '../../redux/actions'\n\nconst ContactList = ({ contacts, onClick }) => {\n    const contactElements = contacts.map(({ id, ...props }) => <ContactListItem key={id} {...props} onClick={() => onClick(id)} />)\n    return (\n        <ul>\n            {contactElements}\n        </ul>\n    )\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired\n    }).isRequired)\n}\n\nconst mapStateToProps = (state) => {\n    const { filter, contacts } = state.phonebook;\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n    return {\n        contacts: filteredContacts,\n    }\n}\n\nconst mapDispatchToPtops = dispatch => ({\n    onClick: (id) => dispatch(actions.deleteContact(id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToPtops)(ContactList);","import React, { Component } from 'react'\nimport ContactForm from '../../components/ContactFrom'\nimport Filter from '../../components/Filter';\nimport ContactList from '../../components/ContactList'\n\nclass PhonebookPage extends Component {\n\n    render() {\n        return (\n            <div>\n                <h1>Phonebook</h1>\n                <ContactForm />\n\n                <h2>Contacts</h2>\n                <Filter />\n                <ContactList />\n            </div>\n        )\n    }\n}\n\nexport default PhonebookPage;","import React from 'react';\n\nimport PhoneBookPage from './pages/PhonebookPage'\n\nconst App = () => {\n    return (<>\n        <PhoneBookPage />\n    </>\n    );\n}\n\nexport default App;","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit'\nimport actions from './actions'\n\nconst initialState = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n]\n\nconst contacts = createReducer(initialState, {\n    [actions.addContact]: (state, { payload }) => [...state, payload],\n    [actions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n})\nconst filter = createReducer('', {\n    [actions.filterContacts]: (_, { payload }) => payload,\n})\n\nexport default combineReducers({\n    contacts,\n    filter,\n})","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n    persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger'\nimport reducer from './reducer'\n\nconst contactsPersistConfig = {\n    key: 'contacts',\n    storage,\n    blacklist: ['filter']\n}\n\nconst middleware = [...getDefaultMiddleware({\n    serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n}), logger];\n\nconst store = configureStore({\n    reducer: {\n        phonebook: persistReducer(contactsPersistConfig, reducer)\n    },\n    middleware,\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store)\n\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport App from './App'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store} >\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactFrom_form__1FTiq\",\"formInput\":\"ContactFrom_formInput__uvetx\",\"formField\":\"ContactFrom_formField__adwmr\",\"errorMessage\":\"ContactFrom_errorMessage__21Ni7\"};"],"sourceRoot":""}